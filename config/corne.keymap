/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*     36 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────┬─────────────────────╮ 
  │  0   1   2   3   4 │ 5   6   7   8   9   │ 
  │ 10  11  12  13  14 │ 15  16  17  18  19  │ 
  │ 20  21  22  23  24 │ 25  26  27  28  29  │ 
  ╰──────╮ 30  31  32  │ 33  34  35 ╭────────╯ 
          ╰────────────┴───────────╯             */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define RAISE 1
#define LOWER 2

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 // left-hand keys
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 // right-hand keys
#define THUMBS 30 31 32 33 34 35
#define TAPPING_TERM 200
#define QUICK_TAP    100

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS) \
  combo_##NAME { \
    timeout-ms = <25>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
  };

&caps_word { continue-list = <UNDERSCORE MINUS SPACE SINGLE_QUOTE DOUBLE_QUOTES EXCLAMATION QUESTION BACKSPACE>; };

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <TAPPING_TERM>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    /*     36 KEY MATRIX / LAYOUT MAPPING
  ╭────────────────────┬─────────────────────╮ 
  │  0   1   2   3   4 │ 5   6   7   8   9   │ 
  │ 10  11  12  13  14 │ 15  16  17  18  19  │ 
  │ 20  21  22  23  24 │ 25  26  27  28  29  │ 
  ╰──────╮ 30  31  32  │ 33  34  35 ╭────────╯ 
          ╰────────────┴───────────╯             */


    };

    chosen { zmk,matrix_transform = &five_column_transform; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ' | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   |  ,   |  .   | / |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |

            display-name = "Base";
            bindings = <
  &kp Q  &kp W  &kp E     &kp R  &kp T       &kp Y      &kp U      &kp I       &kp O    &kp P
  &kp A  &kp S  &kp D     &kp F  &kp G       &kp H      &kp J      &kp K       &kp L    &kp APOS
  &kp Z  &kp X  &kp C     &kp V  &kp B       &kp N      &kp M      &kp COMMA   &kp DOT  &kp FSLH
                &kp LGUI  &mo 1  &kp BSPC    &kp SPACE  &kp ENTER  &kp KP_NUM
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
            // | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
            // | BTCLR |     |     |     |     |     |     |     |     |     |     |
            //               | GUI |     | SPC |     | ENT | ESC | TAB |

            display-name = "Lower";
            bindings = <
  &kp EXCL  &kp AT        &kp H         &kp H         &kp DLLR        &kp PRCNT     &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR
  &kp RPAR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4  &kp LEFT   &kp DOWN  &kp UP           &kp RIGHT
  &trans    &bt BT_CLR    &trans        &trans        &trans          &trans        &trans     &trans    &trans           &trans
                          &trans        &kp LGUI      &trans          &kp SPACE     &kp RET    &kp ESC
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
            // | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
            // | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
            //            | GUI | ESC | SPC |     | ENT |     | TAB |

            display-name = "Raise";
            bindings = <
  &kp N1     &kp N2     &kp N3    &kp N4     &kp N5       &kp N6    &kp N7    &kp N8     &kp N9    &kp N0
  &kp MINUS  &kp EQUAL  &kp LBRC  &kp LBKT   &kp LPAR     &kp RPAR  &kp RBKT  &kp RBRC   &kp FSLH  &kp BSLH
  &kp GRAVE  &trans     &trans    &kp COMMA  &kp COLON    &kp SEMI  &kp DOT   &kp LCTRL  &kp RALT  &trans
                        &kp LGUI  &kp ESC    &kp SPACE    &kp RET   &trans    &kp TAB
            >;
        };
    };
};
